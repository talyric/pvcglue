# This is a generated file.  Do not modify...or else!  :)

set :stage, :<%= Pvcglue.cloud.stage_name %>
set :rails_env, :<%= Pvcglue.cloud.stage_name %> # workaround for RAILS_ENV= being blank in delayed job tasks
set :deploy_to, '<%= Pvcglue.cloud.deploy_to_app_dir %>'
set :linked_files, ['.env.<%= Pvcglue.cloud.stage_name %>']
<% if Pvcglue.cloud.delayed_job_args %>
set :delayed_job_args, "<%= Pvcglue.cloud.delayed_job_args %>"
<% end %>

<% Pvcglue.cloud.nodes_in_stage('web').each do |node, node_config| %>
server '<%= node_config[:public_ip] %>', roles: %w{web app db}, user: 'deploy' # server: <%= node.to_s %>
<% end %>

<% if Pvcglue.cloud.db_rebuild %>
namespace :deploy do

  desc 'Runs rake db:migrate if migrations are set'
  task :migrate => [:set_rails_env] do
    on primary fetch(:migration_role) do
      within release_path do
        with rails_env: fetch(:rails_env) do
          execute :rake, "db:rebuild"
        end
      end
    end
  end

  after 'deploy:updated', 'deploy:migrate'
end
<% end %>
